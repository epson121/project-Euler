/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
 */

public class Euler2
{
    //attempt #1 with modulo
    public static void fibonacciSum()
    {
        int sum = 2, fib1 = 1, fib2 = 2, fib3 = 0;
        while(fib3 < 4000000)
        {
            fib3 = fib2 + fib1;
            if (fib3 % 2 == 0)
            {
                sum += fib3;
            }
            fib1 = fib2;
            fib2 = fib3;
        }
        System.out.println(sum);
    }
    
    //attempt #2 adding to sum every third fibonacci number -> every third is even
    public static void fibonacciSum2()
    {
        
        int sum = 2, fib1 = 1, fib2 = 2, fib3 = 0, counter = 3;
        while(fib3 < 4000000)
        {
            fib3 = fib2 + fib1;
            fib1 = fib2;
            fib2 = fib3;
            counter -= 1;
            if (counter == 0)
            {
                sum += fib3;
                counter = 3;
            }
        }
        System.out.println(sum);
        
    }
    public static void main(String[] args)
    {
        fibonacciSum();
        //fibonacciSum2();
    }
}